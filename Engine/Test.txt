CMAKE_MINIMUM_REQUIRED(VERSION 3.24)
# cppを使うプロジェクト
project(HobbyEngine
    VERSION 1.0.0
    DESCRIPTION "Hobby GameEngine"
    LANGUAGES CXX
)

message("project name is automaically set as: ${PROJECT_NAME}")

#include(FetchContent)

# SDL Setup Macro
macro(sdl_setup)
     # SDL取り込む
#    add_subdirectory(${HobbyEngine_SOURCE_DIR}/Dependencies/SDLModule/SDL)

    # SDLのインクルードファイルをターゲット指定
#    set (SDL3_DIR "${HobbyEngine_SOURCE_DIR}/Dependencies/SDLModule/SDL")
#    target_include_directories(HobbyEngine PRIVATE
#        ${SDL3_DIR}/include
#    ) 
#
#    set (SDL3_BIN_DIR "${HobbyEngine_BINARY_DIR}/Dependencies/SDLModule/SDL")
#    set (SDL_DLLFILE ${SDL3_BIN_DIR}/SDL3.dll)
#
#    # SDL3.dllをBuildディレクトリにインストール
#    install(FILES ${SDL_DLLFILE} DESTINATION ${CMAKE_BINARY_DIR})
#
    # すでにビルド済みのSDLのdllファイルがあればそれを参照
    # 初期環境構築ではBuildディレクトリにSDLのDllファイルがない事でインストールが失敗するための対策
#    set (SDL_LINK_DLLFILE ${CMAKE_BINARY_DIR}/SDL3.dll)
#    if (NOT EXISTS ${SDL_LINK_DLLFILE})
#        set (SDL_LINK_DLLFILE ${SDL_DLLFILE})
#    endif()

endmacro()

# Boost Setup Macro
macro(boost_setup)
   
    # 利用するBoostのインクルードを設定
    set(BOOST_INCLUDE_LIBRARIES thread filesystem system)
    set(BOOST_ENABLE_CMAKE ON)

    # gitからBoostを取得
    FetchContent_Declare(
      Boost
      GIT_REPOSITORY https://github.com/boostorg/boost.git
      GIT_TAG boost-1.80.0
    )
    FetchContent_MakeAvailable(Boost)

    # 利用するBoostのモジュールを設定
    set (BOOST_LINK_TARGET Boost::filesystem)
endmacro()

add_subdirectory(${HobbyEngine_SOURCE_DIR}/Dependencies/SDLModule/SDL)

set (SDL3_BIN_DIR "${HobbyEngine_BINARY_DIR}/Dependencies/SDLModule/SDL")
set (SDL_DLLFILE ${SDL3_BIN_DIR}/SDL3.dll)
message(${SDL_DLLFILE})

# SDL3.dllをBuildディレクトリにインストール
install(FILES ${SDL_DLLFILE} DESTINATION ${CMAKE_BINARY_DIR})

# General source files
#file(GLOB SOURCE_FILES
#  ${HobbyEngine_SOURCE_DIR}/Source/*.cpp)
file(GLOB_RECURSE SOURCE_LIST CONFIGURE_DEPENDS "${HobbyEngine_SOURCE_DIR}/Include/*.h" "${HobbyEngine_SOURCE_DIR}/Source/*.cpp")
message(${SOURCE_LIST})


# C++のコンパイル対象のc++コードファイルを指定
# 静的ライブラリで作成
add_library(HobbyEngine STATIC ${SOURCE_LIST})

# SDLのインクルードファイルをターゲット指定
set (SDL3_DIR "${HobbyEngine_SOURCE_DIR}/Dependencies/SDLModule/SDL")
target_include_directories(HobbyEngine PRIVATE
    ${SDL3_DIR}/include
) 

# C++ 17を利用
target_compile_features(HobbyEngine PRIVATE cxx_std_17)
# includeディレクトリを利用者側から#includeで取り込めるようにしている
target_include_directories(HobbyEngine INTERFACE ${HobbyEngine_SOURCE_DIR}/include)


# SDLのセットアップ
#sdl_setup()

#boost_setup()

#add_custom_command(
#  TARGET HobbyEngine POST_BUILD
#  COMMAND ${CMAKE_COMMAND} -E copy ${SDL_DLLFILE} $<TARGET_FILE_DIR:HobbyEngine>
#)

set (SDL_LINK_DLLFILE ${CMAKE_BINARY_DIR}/SDL3.dll)
if (NOT EXISTS ${SDL_LINK_DLLFILE})
    set (SDL_LINK_DLLFILE ${SDL_DLLFILE})
endif()

# リンクさせるライブラリ(静的 / 動的)を指定
target_link_libraries(HobbyEngine
    ${SDL_LINK_DLLFILE}
#    ${BOOST_LINK_TARGET}
    # OpenGLを利用予定
    OpenGL32
)
